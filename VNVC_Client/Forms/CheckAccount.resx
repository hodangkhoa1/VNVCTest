<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AADboTkx1584IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAN+fQBDZoTmt2p48IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN+fQBDZoTmt2p48IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN+fQBDZoTmt26A6IwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkv8HDYL2OxCE9x8Akv8HAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN+fQBDZoTmt26A6IwAA
        AAD/25IH+duhVPrZoo752qGd+duhf/rZnzUAAAAAAAAAAAAAAAAAAAAAAAAAABKA9hwOg/j/DoP4/w6D
        +PgOg/i3D4L4ZheL/wsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWc
        ORLZoDqv7c2EV/nZoeD52qH/+dqh//naof/52qH/+dqh//naoLL/16ETAAAAAAAAAAAAAAAAEoD2HA6D
        +P8Og/j/DoP4/w6D+P8Og/j/DoP45g+C+GYAgP8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO/PkU/52aH7+dqh//naof/52qH/+dqh//naof/52qH/+dqh//naodT/26QOAAAAAAAA
        AAASgPYcDoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6C+LYRiP8PAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/358I+dqh4fnaof/52qH/+dqh//naof/52qH/+dqh//naof/52qH/+dqh//ra
        oI8AAAAAAAAAABKA9hwOg/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w+D+NMPh/8RAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPnZolj52qH/+dqh//naof/52qH/+dqh//naof/52qH/+dqh//na
        of/52qH/+dqh9f/mmQoAAAAAEoD2HA6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6E
        +LoAgP8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+tqikfnaof/52qH/+dqh//naof/52qH/+dqh//na
        of/52qH/+dqh//naof/52qH/+tufOAAAAAASgPYcDoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D
        +P8Og/j/DoP4/w+E+XoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD52qGe+dqh//naof/52qH/+dqh//na
        of/52qH/+dqh//naof/52qH/+dqh//naof/426BGAAAAABKA9hwOg/j/DoP4/w6D+P8Og/j/DoP4/w6D
        +P8Og/j/DoP4/w6D+P8Og/j/DoP48guF9BcAAAAAAAAAAAAAAAAAAAAAAAAAAPnZoYD52qH/+dqh//na
        of/52qH/+dqh//naof/52qH/+dqh//naof/52qH/+dqh//jXoSYAAAAAEoD2HA6D+P8Og/j/DoP4/w6D
        +P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DYL3hQAAAAAAAAAAAAAAAAAAAAAAAAAA+tygM/na
        of/52qH/+dqh//naof/52qH/+dqh//naof/52qH/+dqh//naof/52qHYAAAAAAAAAAASgPYcDoP4/w6D
        +P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8OgvjXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+dqirPnaof/52qH/+dqh//naof/52qH/+dqh//naof/52qH/+dqh//naoFMAAAAAAAAAABKA
        9hwOg/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/glAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/3ZkP+dqhyfnaof/52qH/+dqh//naof/52qH/+dqh//naof/526F/AAAAAAAA
        AAAAAAAAEoD2HA6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6F
        +EsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/46oJ+dmhgPraoen52qH/+dqh//naof/526HL+NqgSwAA
        AAAAAAAAAAAAAAAAAAASgPYcDoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D+P8Og/j/DoP4/w6D
        +P8Og/j/D4P3ZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//+AAvjXoSb63KAz9N6mFwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA/wYPgvozD4L6Mw+C+jMPgvozD4L6Mw+C+jMPgvozD4L6Mw+C
        +jMPgvozD4L6Mw+C+jMLgPQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABax9jsXsfj/F7H4/xex
        +P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8XsfhOAAAAAAlS/xwKU/v/ClP7/wpT
        +/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8JU/psAAAAAAAAAAAAAAAAFq/4Ixex
        +P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+E4AAAAACVL/HApT
        +/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wlU/FIAAAAAAAAAAAAA
        AAAgv/8IF7H4+xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4TgAA
        AAAJUv8cClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP6NAAA
        AAAAAAAAAAAAAAAAAAAXsfi+F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex
        +P8XsfhOAAAAAAlS/xwKU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT
        ++wAVf8DAAAAAAAAAAAAAAAAAAAAABew+G4Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex
        +P8Xsfj/F7H4/xex+E4AAAAACVL/HApT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT
        +/8KU/v/ClP8nQAAAAAAAAAAAAAAAAAAAAAAAAAAEK//EBex+ewXsfj/F7H4/xex+P8Xsfj/F7H4/xex
        +P8Xsfj/F7H4/xex+P8Xsfj/F7H4TgAAAAAJUv8cClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT
        +/8KU/v/ClP7/wpT+/0KU/oxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFrL4dBex+P8Xsfj/F7H4/xex
        +P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8XsfhOAAAAAAlS/xwKU/v/ClP7/wpT+/8KU/v/ClP7/wpT
        +/8KU/v/ClP7/wpT+/8KU/v/ClL6oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArqv8GFrH4wRex
        +P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+E4AAAAACVL/HApT+/8KU/v/ClP7/wpT
        +/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+uAMUf8WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAas/IUF7H43Rex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4TgAAAAAJUv8cClP7/wpT
        +/8KU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/vzC1H6LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAUrfUZF7L3yRex+P8Xsfj/F7H4/xex+P8Xsfj/F7H4/xex+P8XsfhOAAAAAAlS
        /xwKU/v/ClP7/wpT+/8KU/v/ClP7/wpT+/8KU/v/ClP75ApT+jQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcqv8JF7H4jxex+PkXsfj/F7H4/xex+P8Xsfj/F7H4/xex
        +E4AAAAACVL/HApT+/8KU/v/ClP7/wpT+/8KU/v/ClP7/gtT+6oLTv8XAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF7T4Ihey+JgXsfjpF7H4/xex
        +P8Xsfj/F7H4TgAAAAAJUv8cClP7/wpT+/8KU/v/CVP78gtT+qkJVfo2AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        /wIXsPY3FrL3XRix+XYZrvkpAAAAABFV/w8KVPt9C1L6YAxR+0IASf8HAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAP////x////+P////x//D/+IHwH/wAcAf+ADAD/AAwAfwAEAD8ABAA/AA
        QAHwAEAB8ADAAfgAwAD4AcAA/APAAP8PwAD//////////+AAQADgAEAA4ABAAPAAQADwAEAB8ABAAfgA
        QAP4AEAD/ABAB/4AQA//AEAf/8BAf//wQf8=
</value>
  </data>
</root>